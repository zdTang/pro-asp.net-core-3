@model IEnumerable<Product>
@{ 
    decimal average = Model.Average(p => p.Price);
    // if the view has complate HTML element, set Layout as null to avoid duplication
    Layout = null;
    Func<Product, object> row = @<tr><td>@item.Name</td><td>@item.Price</td></tr>;
}
<!DOCTYPE html>
<html>
<head>
    <link href="/lib/twitter-bootstrap/css/bootstrap.min.css" rel="stylesheet" />
</head>
<body>
    <h6 class="bg-secondary text-white text-center m-2 p-2">Products</h6>
    <div class="m-2">
        <table class="table table-sm table-striped table-bordered">
            <thead>
                <tr><th>Name</th><th>Price</th><th></th></tr>
            </thead>
            <tbody>
                @foreach (Product p in Model) {
                    @*<tr>
                        <td>@p.Name</td><td>@p.Price</td>
                        <td>@((p.Price / average * 100).ToString("F1"))
                                % of average</td>
                    </tr>
                    
                    @Html.Partial("_RowPartial")  // using HTML helper to reference partial view is still OK
                    
                    <partial name="_RowPartial" model="p"/>
                    *@
                    @row(p)
                }
            </tbody>
        </table>
    </div>
</body>
</html>
